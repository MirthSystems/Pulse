{
    "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
    "openapi": "3.0.0",
    "info": {
      "title": "Pulse API",
      "description": "API for the Pulse nightlife discovery platform",
      "version": "v1"
    },
    "servers": [
      {
        "url": "https://localhost:7253"
      }
    ],
    "paths": {
      "/api/messages/public": {
        "get": {
          "tags": [
            "Messages"
          ],
          "operationId": "Messages_GetPublicMessage",
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      },
      "/api/messages/protected": {
        "get": {
          "tags": [
            "Messages"
          ],
          "operationId": "Messages_GetProtectedMessage",
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/operating-schedules/{id}": {
        "get": {
          "tags": [
            "OperatingSchedules"
          ],
          "summary": "GetOperatingScheduleById",
          "description": "Retrieves an operating schedule by its ID",
          "operationId": "OperatingSchedules_GetOperatingScheduleById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OperatingScheduleItemExtended"
                  }
                }
              }
            },
            "404": {
              "description": ""
            }
          }
        },
        "put": {
          "tags": [
            "OperatingSchedules"
          ],
          "summary": "UpdateOperatingSchedule",
          "description": "Updates an existing operating schedule",
          "operationId": "OperatingSchedules_UpdateOperatingSchedule",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "requestBody": {
            "x-name": "request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOperatingScheduleRequest"
                }
              }
            },
            "required": true,
            "x-position": 2
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OperatingScheduleItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        },
        "delete": {
          "tags": [
            "OperatingSchedules"
          ],
          "summary": "DeleteOperatingSchedule",
          "description": "Deletes an operating schedule",
          "operationId": "OperatingSchedules_DeleteOperatingSchedule",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            },
            "401": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/operating-schedules": {
        "post": {
          "tags": [
            "OperatingSchedules"
          ],
          "summary": "CreateOperatingSchedule",
          "description": "Creates a new operating schedule",
          "operationId": "OperatingSchedules_CreateOperatingSchedule",
          "requestBody": {
            "x-name": "request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOperatingScheduleRequest"
                }
              }
            },
            "required": true,
            "x-position": 1
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OperatingScheduleItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/specials": {
        "get": {
          "tags": [
            "Specials"
          ],
          "summary": "SearchSpecials",
          "description": "Searches for specials grouped by venue with optional filtering",
          "operationId": "Specials_SearchSpecials",
          "parameters": [
            {
              "name": "Address",
              "in": "query",
              "schema": {
                "type": "string",
                "maxLength": 250,
                "minLength": 0
              },
              "x-position": 1
            },
            {
              "name": "Radius",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "double",
                "maximum": 100,
                "minimum": 0.1
              },
              "x-position": 2
            },
            {
              "name": "SearchDateTime",
              "in": "query",
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$",
                "nullable": true
              },
              "x-position": 3
            },
            {
              "name": "SearchTerm",
              "in": "query",
              "schema": {
                "type": "string",
                "maxLength": 100,
                "minLength": 0,
                "nullable": true
              },
              "x-position": 4
            },
            {
              "name": "VenueId",
              "in": "query",
              "schema": {
                "type": "string",
                "pattern": "^\\d+$",
                "nullable": true
              },
              "x-position": 5
            },
            {
              "name": "SpecialTypeId",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "maximum": 2147483647,
                "minimum": 1,
                "nullable": true
              },
              "x-position": 6
            },
            {
              "name": "IsCurrentlyRunning",
              "in": "query",
              "schema": {
                "type": "boolean",
                "nullable": true
              },
              "x-position": 7
            },
            {
              "name": "Page",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "maximum": 2147483647,
                "minimum": 1
              },
              "x-position": 8
            },
            {
              "name": "PageSize",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "maximum": 10000,
                "minimum": 1
              },
              "x-position": 9
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagedResultOfSearchSpecialsResult"
                  }
                }
              }
            },
            "404": {
              "description": ""
            },
            "400": {
              "description": ""
            }
          }
        },
        "post": {
          "tags": [
            "Specials"
          ],
          "summary": "CreateSpecial",
          "description": "Creates a new special promotion",
          "operationId": "Specials_CreateSpecial",
          "requestBody": {
            "x-name": "request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSpecialRequest"
                }
              }
            },
            "required": true,
            "x-position": 1
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SpecialItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "403": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/specials/{id}": {
        "get": {
          "tags": [
            "Specials"
          ],
          "summary": "GetSpecialById",
          "description": "Retrieves detailed information about a specific special",
          "operationId": "Specials_GetSpecialById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SpecialItemExtended"
                  }
                }
              }
            },
            "404": {
              "description": ""
            }
          }
        },
        "put": {
          "tags": [
            "Specials"
          ],
          "summary": "UpdateSpecial",
          "description": "Updates an existing special promotion",
          "operationId": "Specials_UpdateSpecial",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "requestBody": {
            "x-name": "request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSpecialRequest"
                }
              }
            },
            "required": true,
            "x-position": 2
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SpecialItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "403": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Specials"
          ],
          "summary": "DeleteSpecial",
          "description": "Soft-deletes a special promotion",
          "operationId": "Specials_DeleteSpecial",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "403": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/specials/venue/{venueId}": {
        "get": {
          "tags": [
            "Specials"
          ],
          "operationId": "Specials_GetVenueSpecials",
          "parameters": [
            {
              "name": "venueId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SpecialItem"
                    }
                  }
                }
              }
            },
            "404": {
              "description": ""
            }
          }
        }
      },
      "/api/venues": {
        "get": {
          "tags": [
            "Venues"
          ],
          "summary": "GetVenues",
          "description": "Retrieves a paginated list of venues with optional filtering",
          "operationId": "Venues_GetVenues",
          "parameters": [
            {
              "name": "Page",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "maximum": 2147483647,
                "minimum": 1
              },
              "x-position": 1
            },
            {
              "name": "PageSize",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "maximum": 100,
                "minimum": 1
              },
              "x-position": 2
            },
            {
              "name": "SearchText",
              "in": "query",
              "schema": {
                "type": "string",
                "maxLength": 100,
                "minLength": 0,
                "nullable": true
              },
              "x-position": 3
            },
            {
              "name": "Address",
              "in": "query",
              "schema": {
                "type": "string",
                "maxLength": 250,
                "minLength": 0,
                "nullable": true
              },
              "x-position": 4
            },
            {
              "name": "RadiusInMiles",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "double",
                "maximum": 100,
                "minimum": 0.1,
                "nullable": true
              },
              "x-position": 5
            },
            {
              "name": "OpenOnDayOfWeek",
              "in": "query",
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DayOfWeek"
                  }
                ]
              },
              "x-position": 6
            },
            {
              "name": "TimeOfDay",
              "in": "query",
              "schema": {
                "type": "string",
                "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
                "nullable": true
              },
              "x-position": 7
            },
            {
              "name": "HasActiveSpecials",
              "in": "query",
              "schema": {
                "type": "boolean",
                "nullable": true
              },
              "x-position": 8
            },
            {
              "name": "SpecialTypeId",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "x-position": 9
            },
            {
              "name": "IncludeAddressDetails",
              "in": "query",
              "schema": {
                "type": "boolean"
              },
              "x-position": 10
            },
            {
              "name": "IncludeBusinessHours",
              "in": "query",
              "schema": {
                "type": "boolean"
              },
              "x-position": 11
            },
            {
              "name": "SortOrder",
              "in": "query",
              "schema": {
                "type": "integer",
                "format": "int32",
                "maximum": 4,
                "minimum": 0
              },
              "x-position": 12
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagedResultOfVenueItem"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          }
        },
        "post": {
          "tags": [
            "Venues"
          ],
          "summary": "CreateVenue",
          "description": "Creates a new venue",
          "operationId": "Venues_CreateVenue",
          "requestBody": {
            "x-name": "request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVenueRequest"
                }
              }
            },
            "required": true,
            "x-position": 1
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "403": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/venues/{id}": {
        "get": {
          "tags": [
            "Venues"
          ],
          "summary": "GetVenueById",
          "description": "Retrieves detailed information about a specific venue",
          "operationId": "Venues_GetVenueById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          }
        },
        "put": {
          "tags": [
            "Venues"
          ],
          "summary": "UpdateVenue",
          "description": "Updates an existing venue's information",
          "operationId": "Venues_UpdateVenue",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "requestBody": {
            "x-name": "request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVenueRequest"
                }
              }
            },
            "required": true,
            "x-position": 2
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueItemExtended"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "403": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Venues"
          ],
          "summary": "DeleteVenue",
          "description": "Soft-deletes a venue",
          "operationId": "Venues_DeleteVenue",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "401": {
              "description": ""
            },
            "403": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          },
          "security": [
            {
              "JWT": []
            }
          ]
        }
      },
      "/api/venues/{id}/business-hours": {
        "get": {
          "tags": [
            "Venues"
          ],
          "summary": "GetVenueBusinessHours",
          "description": "Retrieves the business hours for a specific venue",
          "operationId": "Venues_GetVenueBusinessHours",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OperatingScheduleItem"
                    }
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          }
        }
      },
      "/api/venues/{id}/specials": {
        "get": {
          "tags": [
            "Venues"
          ],
          "summary": "GetVenueSpecials",
          "description": "Retrieves all special promotions offered by a specific venue",
          "operationId": "Venues_GetVenueSpecials",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "x-position": 1
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SpecialItem"
                    }
                  }
                }
              }
            },
            "400": {
              "description": ""
            },
            "404": {
              "description": ""
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Message": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "text": {
              "type": "string",
              "nullable": true
            }
          }
        },
        "OperatingScheduleItemExtended": {
          "allOf": [
            {
              "$ref": "#/components/schemas/OperatingScheduleItem"
            },
            {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "venueName"
              ],
              "properties": {
                "venueId": {
                  "type": "string",
                  "pattern": "^\\d+$"
                },
                "venueName": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 0
                }
              }
            }
          ]
        },
        "OperatingScheduleItem": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "dayName",
            "openTime",
            "closeTime"
          ],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "dayOfWeek": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "dayName": {
              "type": "string",
              "minLength": 1
            },
            "openTime": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "closeTime": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "isClosed": {
              "type": "boolean"
            }
          }
        },
        "DayOfWeek": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "CreateOperatingScheduleRequest": {
          "allOf": [
            {
              "$ref": "#/components/schemas/OperatingHours"
            },
            {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "venueId"
              ],
              "properties": {
                "venueId": {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^\\d+$"
                }
              }
            }
          ]
        },
        "OperatingHours": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "dayOfWeek",
            "timeOfOpen",
            "timeOfClose",
            "isClosed"
          ],
          "properties": {
            "dayOfWeek": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "timeOfOpen": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "timeOfClose": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "isClosed": {
              "type": "boolean"
            }
          }
        },
        "UpdateOperatingScheduleRequest": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "timeOfOpen",
            "timeOfClose",
            "isClosed"
          ],
          "properties": {
            "timeOfOpen": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "timeOfClose": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "isClosed": {
              "type": "boolean"
            }
          }
        },
        "PagedResultOfSearchSpecialsResult": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SearchSpecialsResult"
              }
            },
            "pagingInfo": {
              "$ref": "#/components/schemas/PagingInfo"
            }
          }
        },
        "SearchSpecialsResult": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "venue": {
              "$ref": "#/components/schemas/VenueItemExtended"
            },
            "specials": {
              "$ref": "#/components/schemas/SpecialMenu"
            }
          }
        },
        "VenueItemExtended": {
          "allOf": [
            {
              "$ref": "#/components/schemas/VenueItem"
            },
            {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "streetAddress",
                "postcode",
                "country",
                "businessHours"
              ],
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "format": "phone",
                  "maxLength": 20,
                  "minLength": 0
                },
                "website": {
                  "type": "string",
                  "format": "uri",
                  "maxLength": 255,
                  "minLength": 0
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "maxLength": 255,
                  "minLength": 0
                },
                "streetAddress": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 0
                },
                "secondaryAddress": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 0
                },
                "postcode": {
                  "type": "string",
                  "maxLength": 20,
                  "minLength": 0
                },
                "country": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 0
                },
                "businessHours": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatingScheduleItem"
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              }
            }
          ]
        },
        "VenueItem": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "locality",
            "region"
          ],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^\\d+$",
              "nullable": true
            },
            "name": {
              "type": "string",
              "maxLength": 255,
              "minLength": 2
            },
            "description": {
              "type": "string",
              "maxLength": 1000,
              "minLength": 0,
              "nullable": true
            },
            "locality": {
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            },
            "region": {
              "type": "string",
              "maxLength": 100,
              "minLength": 0
            },
            "profileImage": {
              "type": "string",
              "maxLength": 255,
              "minLength": 0,
              "nullable": true
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          }
        },
        "SpecialMenu": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SpecialItem"
              }
            }
          }
        },
        "SpecialItem": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "venueId",
            "typeName",
            "content",
            "startDate",
            "startTime"
          ],
          "properties": {
            "id": {
              "type": "string",
              "pattern": "^\\d+$",
              "nullable": true
            },
            "venueId": {
              "type": "string",
              "minLength": 1
            },
            "type": {
              "$ref": "#/components/schemas/SpecialTypes"
            },
            "typeName": {
              "type": "string",
              "minLength": 1
            },
            "content": {
              "type": "string",
              "maxLength": 500,
              "minLength": 0
            },
            "startDate": {
              "type": "string",
              "minLength": 1,
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
            },
            "startTime": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "endTime": {
              "type": "string",
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
              "nullable": true
            },
            "isCurrentlyRunning": {
              "type": "boolean"
            },
            "isRecurring": {
              "type": "boolean"
            }
          }
        },
        "SpecialTypes": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Food",
            "Drink",
            "Entertainment"
          ],
          "enum": [
            "Food",
            "Drink",
            "Entertainment"
          ]
        },
        "PagingInfo": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "currentPage": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "totalCount": {
              "type": "integer",
              "format": "int32"
            },
            "totalPages": {
              "type": "integer",
              "format": "int32"
            },
            "hasPreviousPage": {
              "type": "boolean"
            },
            "hasNextPage": {
              "type": "boolean"
            }
          }
        },
        "SpecialItemExtended": {
          "allOf": [
            {
              "$ref": "#/components/schemas/SpecialItem"
            },
            {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "venue"
              ],
              "properties": {
                "venue": {
                  "$ref": "#/components/schemas/VenueItem"
                },
                "expirationDate": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                  "nullable": true
                },
                "cronSchedule": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 0,
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              }
            }
          ]
        },
        "CreateSpecialRequest": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "venueId",
            "content",
            "type",
            "startDate",
            "startTime",
            "isRecurring"
          ],
          "properties": {
            "venueId": {
              "type": "string",
              "minLength": 1,
              "pattern": "^\\d+$"
            },
            "content": {
              "type": "string",
              "maxLength": 200,
              "minLength": 5
            },
            "type": {
              "$ref": "#/components/schemas/SpecialTypes"
            },
            "startDate": {
              "type": "string",
              "minLength": 1,
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
            },
            "startTime": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "endTime": {
              "type": "string",
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
              "nullable": true
            },
            "expirationDate": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "nullable": true
            },
            "isRecurring": {
              "type": "boolean"
            },
            "cronSchedule": {
              "type": "string",
              "maxLength": 100,
              "minLength": 0,
              "pattern": "^(\\*|[0-9,-/]+)(\\s+(\\*|[0-9,-/]+)){4,5}$",
              "nullable": true
            }
          }
        },
        "UpdateSpecialRequest": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "content",
            "type",
            "startDate",
            "startTime",
            "isRecurring"
          ],
          "properties": {
            "content": {
              "type": "string",
              "maxLength": 200,
              "minLength": 5
            },
            "type": {
              "$ref": "#/components/schemas/SpecialTypes"
            },
            "startDate": {
              "type": "string",
              "minLength": 1,
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
            },
            "startTime": {
              "type": "string",
              "minLength": 1,
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
            },
            "endTime": {
              "type": "string",
              "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
              "nullable": true
            },
            "expirationDate": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "nullable": true
            },
            "isRecurring": {
              "type": "boolean"
            },
            "cronSchedule": {
              "type": "string",
              "maxLength": 100,
              "minLength": 0,
              "nullable": true
            }
          }
        },
        "PagedResultOfVenueItem": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VenueItem"
              }
            },
            "pagingInfo": {
              "$ref": "#/components/schemas/PagingInfo"
            }
          }
        },
        "CreateVenueRequest": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "address",
            "hoursOfOperation"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 100,
              "minLength": 2
            },
            "description": {
              "type": "string",
              "maxLength": 500,
              "minLength": 0,
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "format": "phone",
              "maxLength": 20,
              "minLength": 0,
              "nullable": true
            },
            "website": {
              "type": "string",
              "format": "uri",
              "maxLength": 255,
              "minLength": 0,
              "nullable": true
            },
            "email": {
              "type": "string",
              "format": "email",
              "maxLength": 100,
              "minLength": 0,
              "nullable": true
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "maxLength": 255,
              "minLength": 0,
              "nullable": true
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            },
            "hoursOfOperation": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/components/schemas/OperatingHours"
              }
            }
          }
        },
        "AddressRequest": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "streetAddress",
            "locality",
            "region",
            "postcode",
            "country"
          ],
          "properties": {
            "streetAddress": {
              "type": "string",
              "maxLength": 100,
              "minLength": 3
            },
            "secondaryAddress": {
              "type": "string",
              "maxLength": 50,
              "minLength": 0,
              "nullable": true
            },
            "locality": {
              "type": "string",
              "maxLength": 50,
              "minLength": 2
            },
            "region": {
              "type": "string",
              "maxLength": 50,
              "minLength": 2
            },
            "postcode": {
              "type": "string",
              "maxLength": 20,
              "minLength": 3
            },
            "country": {
              "type": "string",
              "maxLength": 50,
              "minLength": 2
            }
          }
        },
        "UpdateVenueRequest": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "address"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 100,
              "minLength": 2
            },
            "description": {
              "type": "string",
              "maxLength": 500,
              "minLength": 0,
              "nullable": true
            },
            "phoneNumber": {
              "type": "string",
              "format": "phone",
              "maxLength": 20,
              "minLength": 0,
              "nullable": true
            },
            "website": {
              "type": "string",
              "format": "uri",
              "maxLength": 255,
              "minLength": 0,
              "nullable": true
            },
            "email": {
              "type": "string",
              "format": "email",
              "maxLength": 100,
              "minLength": 0,
              "nullable": true
            },
            "profileImage": {
              "type": "string",
              "format": "uri",
              "maxLength": 255,
              "minLength": 0,
              "nullable": true
            },
            "address": {
              "$ref": "#/components/schemas/AddressRequest"
            }
          }
        }
      },
      "securitySchemes": {
        "JWT": {
          "type": "apiKey",
          "description": "Type into the textbox: Bearer {your JWT token}.",
          "name": "Authorization",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "JWT": []
      }
    ]
  }